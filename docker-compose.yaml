# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.8'

# Different Components of the Application
services:

  web-api:
    container_name: ${SERVER_CONTAINER}
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - '2003:${SERVER_PORT}'
    restart: always
    environment:
      DEBUG: '1'
      DB_HOST: ${DB_CONTAINER}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_USER_PW}
    volumes:
      - appdata:/app/volume
    command: python /app/manage.py runserver localhost:${SERVER_PORT}
    networks:
      - backend
      - frontend
    depends_on:
      - db

  web-ui:
    container_name: ${WEB_CONTAINER}
    build:
      context: DMarketing-web-main
      dockerfile: Dockerfile
    ports:
      - "2004:${WEB_PORT}"
    networks:
      - frontend
    depends_on:
      - web-api

  # Database Service (Mysql)
  db:
    container_name: ${DB_CONTAINER}
    image: ${DB_IMAGE}
    ports:
      - "2005:${DB_PORT}"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PW}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PW}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

volumes:
  appdata:
  db-data:

networks:
  backend:
  frontend: